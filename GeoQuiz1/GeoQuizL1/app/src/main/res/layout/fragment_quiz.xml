<FrameLayout xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:tools="http://schemas.android.com/tools"
    android:layout_width="match_parent"
    android:layout_height="match_parent"
    tools:context=".QuizFragment">

    <TextView
        android:id="@+id/token_view"
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        android:text=""
        android:gravity="center"
        />

    <TextView
        android:id="@+id/question_text_view"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:gravity="center"
        android:padding="24dp" />
    <!--
    see:
    https://developer.android.com/guide/topics/resources/more-resources.html#Dimension
    for padding units
    -->

    <LinearLayout
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:orientation="horizontal">

        <!--
        LinearLayout also supports assigning a weight to individual children
        with the android:layout_weight attribute. This attribute assigns an
        "importance" value to a view in terms of how much space it should occupy
        on the screen. A larger weight value allows it to expand to fill any
        remaining space in the parent view. Child views can specify a weight value,
        and then any remaining space in the view group is assigned to children in
        the proportion of their declared weight. Default weight is zero.

        For example, if there are three text fields and two of them declare a weight
        of 1, while the other is given no weight, the third text field without weight
        will not grow and will only occupy the area required by its content.
        The other two will expand equally to fill the space remaining after all three
        fields are measured. If the third field is then given a weight of 2 (instead of 0),
        then it is now declared more important than both the others, so it gets half
        the total remaining space, while the first two share the rest equally.
        -->
        <Button
            android:id="@+id/false_button"
            android:layout_width="wrap_content"
            android:layout_height="wrap_content"
            android:layout_weight="1"
            android:text="@string/false_button" />

        <Button
            android:id="@+id/true_button"
            android:layout_width="wrap_content"
            android:layout_height="wrap_content"
            android:layout_weight="1"
            android:text="@string/true_button" />
    </LinearLayout>

    <LinearLayout
        android:layout_width="wrap_content"
        android:layout_height="wrap_content">

        <ImageButton
            android:id="@+id/previous_button"
            android:layout_width="wrap_content"
            android:layout_height="wrap_content"
            android:padding="20dp"
            android:src="@drawable/arrow_left"/>

        <ImageButton
            android:id="@+id/next_button"
            android:layout_width="wrap_content"
            android:layout_height="wrap_content"
            android:padding="20dp"
            android:src="@drawable/arrow_right"/>
    </LinearLayout>

    <Button
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:id="@+id/button_cheat"
        android:text="@string/cheat_button_label"/>
    <Button
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:id="@+id/button_list"
        android:text="all questions"/>

    <TextView
        android:id="@+id/Level"
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        android:gravity="center"
        android:text="" />


</FrameLayout>
